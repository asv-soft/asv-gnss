using System;
using System.Linq;
using Asv.Gnss;
using JetBrains.Annotations;
using Xunit;

namespace Asv.Gnss.Test.Protocols.Messages.I020;

[TestSubject(typeof(AsterixMessageI020))]
public class AsterixMessageI020Test
{

    [Fact]
    public void METHOD()
    {
        // https://github.com/OpenATSGmbH/jASTERIX/blob/master/src/test/cat020ed1.5.bin
        // https://github.com/OpenATSGmbH/jASTERIX/blob/master/src/test/test_cat020_1.5.cpp
        byte[] data =
        [
            0x14, 0x00, 0x65, 0xFF, 0xE9, 0x47, 0x84, 0x00,
            0x02, 0x41, 0x00, 0x41, 0x6F, 0x5B, 0x00, 0x88,
            0x32, 0xE5, 0x00, 0x2E, 0x6C, 0x4A, 0x05, 0x4B,
            0xB3, 0x01, 0x60, 0x6A, 0x0D, 0xC8, 0x18, 0x2E,
            0x00, 0xFF, 0xC9, 0xFF, 0xDB, 0x00, 0x2D, 0x02,
            0x44, 0x2F, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
            0x00, 0x00, 0x20, 0x00, 0x22, 0x02, 0x10, 0x00,
            0x00, 0x00, 0xA0, 0x00, 0x00, 0x10, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x20, 0x40,
            0x15, 0x80, 0xD0, 0x00, 0x12, 0x00, 0x0F, 0xFF,
            0xF1, 0x00, 0x89, 0x00, 0x7C, 0xFF, 0x86, 0x00,
            0x35, 0x00, 0x53, 0xFF, 0xC1
        ];

        var message = new AsterixMessageI020();
        
        var buffer = new ReadOnlySpan<byte>(data);
        message.Deserialize(ref buffer);

        var rec = (AsterixRecordI020)message.First() ;
        Assert.Equal(rec.Category, AsterixMessageI020.Category);
        Assert.Equal(SystemAreaCode.LocalAirport, rec.DataSourceIdentifier!.Sac);
        Assert.Equal(2, rec.DataSourceIdentifier.Sic);

    }
}