name: Deploy release Nuget for Windows

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-rc'
    
env:
  PATH_TO_PROJECTS: ${{ github.workspace }}\src
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace}}\output\
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'
  GITHUB_PACKAGES_URL: 'https://nuget.pkg.github.com/asv-soft/index.json'

jobs:
  deploy:
    name: 'Deploy'
    runs-on: windows-2019
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      
      - name: Setup .Net
        uses: actions/setup-dotnet@v3
        with:
            dotnet-version: |
              8.x.x
              7.x.x

      - name: Get version
        id: version
        uses: battila7/get-version-action@v2
              
      - name: Check version
        run: echo ${{ steps.version.outputs.version-without-v }}

      - name: Set project version   
        run: |    
          dotnet tool install -g dotnet-setversion    
          setversion ${{ steps.version.outputs.version-without-v }} ${{ env.PATH_TO_PROJECTS }}\Asv.Gnss\Asv.Gnss.csproj
    
      - name: Restore dependencies
        run: |
          cd src
          dotnet restore

      - name: Build projects
        run: |
          cd src
          dotnet build -c Release 

      - name: Running all tests
        run:  |    
          cd src   
          dotnet test --framework .net8.0 --verbosity normal

      - name: Pack projects to Nuget 
        run: |
          cd src
          dotnet pack -c Release --no-build -p:PackageVersion=${{ steps.version.outputs.version-without-v }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

      - name: Push package to Nuget 
        run: |
          cd src
          dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}Asv.Gnss.${{ steps.version.outputs.version-without-v }}.nupkg -k ${{ secrets.NUGET_AUTH_TOKEN }} -s ${{ env.NUGET_SOURCE_URL }}

      - name: Push package to Github packages
        run: |
          cd src
          dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}Asv.Gnss.${{ steps.version.outputs.version-without-v }}.nupkg -k ${{ secrets.GIHUB_NUGET_AUTH_TOKEN }} -s ${{ env.GITHUB_PACKAGES_URL }}
